//App壳配置文件
import com.knight.wanandroid.buildsrc.*
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.wyjson.gorouter'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'android.aop'//最好放在最后一行




android {
    namespace = "com.knight.kotlin.wanandroid"
    compileSdk ProjectBuildDencies.COMPILE_SDK_VERSION
    buildToolsVersion = ProjectBuildDencies.BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId ProjectBuildDencies.APPLICATION_ID
        minSdkVersion ProjectBuildDencies.MIN_SDK_VERSION
        targetSdkVersion ProjectBuildDencies.TARGET_SDK_VERSION
        versionCode ProjectBuildDencies.VERSION_CODE
        versionName ProjectBuildDencies.VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    //签名配置
    signingConfigs {
        debug{
            storeFile file('../debug.jks')//密钥文件路径
            storePassword "wanandroid"//密钥文件密码
            keyAlias "debug"//key别名
            keyPassword "wanandroid"//key密码
        }

        release {
            storeFile file('../wanandroid.jks')//密钥文件路径
            storePassword "wanandroid"//密钥文件密码
            keyAlias "wanandroid"//key别名
            keyPassword "wanandroid"//key密码
        }

    }




    buildTypes {

        debug {
            //代码混淆开关
            minifyEnabled false
            //移除无用资源
            shrinkResources false
            //压缩对齐开关
            zipAlignEnabled false
            //混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名信息配置
            signingConfig signingConfigs.debug
        }

        release {
            //代码混淆开关
            minifyEnabled true
            //移除无用资源
            shrinkResources true
            //压缩对齐开关
            zipAlignEnabled true
            //混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名信息配置
            signingConfig signingConfigs.release
        }
        master {
            //代码混淆开关
            minifyEnabled true
            //移除无用资源
            shrinkResources true
            //压缩对齐开关
            zipAlignEnabled true
            //混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名信息配置
            signingConfig signingConfigs.release
        }
    }
    // 自定义打包apk的文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                outputFileName = "${ProjectBuildDencies.APPLICATION_ID}" +
                        "_${ProjectBuildDencies.VERSION_CODE}" +
                        "(${ProjectBuildDencies.VERSION_NAME})" +
                        "_${variant.buildType.name}" +
                        ".apk"
            }
        }
    }

//    aspectjx {
//        // 排除一些第三方库的包名（Gson、 LeakCanary 和 AOP 有冲突）
//        // exclude 'androidx', 'com.google', 'com.squareup', 'org.apache', 'com.alipay', 'com.taobao', 'versions.9'
//        // 只对以下包名做 AOP 处理
//        include 'com.knight.kotlin'
//        // 否则就会引发冲突，具体表现为：
//        // 编译不过去，报错：java.util.zip.ZipException：Cause: zip file is empty
//        // 编译能过去，但运行时报错：ClassNotFoundException: Didn't find class on path: DexPathList
//    }

    androidAopConfig {
        // enabled 为 false 切面不再起作用，默认不写为 true
        enabled true
        // include 不设置默认全部扫描，设置后只扫描设置的包名的代码
        include 'com.knight.kotlin'
        // exclude 是扫描时排除的包
        // 可排除 kotlin 相关，提高速度
        exclude 'kotlin.jvm', 'kotlin.internal','kotlinx.coroutines.internal', 'kotlinx.coroutines.android'

        // verifyLeafExtends 是否开启验证叶子继承，默认打开，如果没有设置 @AndroidAopMatchClassMethod 的 type = MatchType.LEAF_EXTENDS，可以关闭
        verifyLeafExtends true
        //默认关闭，开启在 Build 或 打包后 将会生成切点信息json文件在 app/build/tmp/cutInfo.json
        cutInfoJson false
        //默认开启，设置 false 后会没有增量编译效果 筛选（关键字： AndroidAOP woven info code） build 输出日志可看时间
       // increment = true//修改、增加、删除匹配切面的话，就会走全量编译
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
        dataBinding true
    }


}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(path:":module_welcome")
    implementation project(path:":module_home")
    implementation project(path:":module_wechat")
    implementation project(path:":module_main")
    implementation project(path:":module_mine")
    implementation project(path:":module_navigate")
    implementation project(path:":module_project")
    implementation project(path:":module_square")
    implementation project(path:":module_web")
    implementation project(path:":module_set")
    implementation project(path:":module_utils")
    implementation project(path:":module_course")
    implementation project(path:":module_message")
    implementation project(path:":module_video")
    implementation project(path:":module_eye_daily")
    implementation project(path:":module_eye_video_detail")
    implementation project(path:":module_eye_discover")
    implementation project(path:":module_realtime")
    implementation project(path:":module_eye_square")
    implementation project(path:":module_eye_recommend")
    implementation Dependencies.JetPack.HILT_CORE
    kapt Dependencies.JetPack.HILT_APT
    kapt Dependencies.JetPack.HILT_ANDROIDX
}