# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# 为了解决编译报错 ：java.io 异常而增加
org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8 --add-exports=java.base/sun.nio.ch=ALL-UNNAMED \
--add-opens=java.base/java.lang=ALL-UNNAMED \
--add-opens=java.base/java.lang.reflect=ALL-UNNAMED \
--add-opens=java.base/java.io=ALL-UNNAMED \
--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED \


# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app"s APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true
#解决Caused by: com.android.builder.errors.EvalIssueException: API 'android.registerTransform' is removed.
#apmsInstrumentationEnabled=false
#在Gradle插件到达8后默认不会生成BuildConfig文件。
#android.defaults.buildfeatures.buildconfig=true
android.useDeprecatedNDK=true
android.defaults.buildfeatures.buildconfig=true
# AGP8 开始 R8 默认是 fullMode ，R8 的 fullMode 会自动处理一些常见的混淆规则，但它比普通模式优化更激进
# 当然，如果你的项目里 keep 规则是完整的，例如反射使用的所有内容都包含在 keep 规则中，那么 fullMode 应该不会引起什么问题，但是，如果你不希望它工作，那么配置 fullMode 为 false 也是可以的
# android.enableR8.fullMode=false
#Mob 设置
MobSDK.spEdition=IZNAO
#aop加快编译速度设置  https://flyjingfish.github.io/AndroidAOP/zh/getting_started/#app-buildgradle-androidaopconfig
androidAop.fastDex = true 
#加速 dexBuilder阶段（默认false）
androidAop.fastDex.variantOnlyDebug = false
#只在 debug 起作用（默认false）
#设置为 true 走您项目当前的打包方式 ，false 则为全量打包方式，不写默认false
androidAop.reflectInvokeMethod = true 
#设置为 true 反射执行切面方法 ，不写默认 false
androidAop.reflectInvokeMethod.variantOnlyDebug = true 
#设置为 true 则只会在 debug 下才有效，不写默认false
androidAop.reflectInvokeMethod.static = true 
#设置为 true 模拟了非反射的情况，不写默认true

#1、androidAop.reflectInvokeMethod 设置为 true 反射执行切面方法会加快打包速度，设置为 false 二次编译速度和开启反射速度是基本一样的
#2、请注意androidAop.reflectInvokeMethod.variantOnlyDebug 设置为 true 时 release 包会忽略 androidAop.reflectInvokeMethod = true 的设置自动不走反射，设为 false 时则没有这种效果（不写默认false）
#3、androidAop.reflectInvokeMethod.static 设置为 true 模拟了非反射的情况兼顾了反射的编译速度，不写默认true，如果想使用反射建议设置此项为 true。设置为 false 则为纯反射
#4、androidAop.reflectInvokeMethod.variantOnlyDebug 只对 Android 的 Library 有效,对 Java 或 Kotlin 的 Library 无效
# 在启用混淆时关闭 full mode
# android.enableR8.fullMode=false


