//********* Base library 模块的公共脚本配置 **********
import com.knight.wanandroid.buildsrc.*
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'
android {
    compileSdkVersion ProjectBuildDencies.COMPILE_SDK_VERSION
    buildToolsVersion ProjectBuildDencies.BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion ProjectBuildDencies.MIN_SDK_VERSION
        targetSdkVersion ProjectBuildDencies.TARGET_SDK_VERSION
        versionCode ProjectBuildDencies.VERSION_CODE
        versionName ProjectBuildDencies.VERSION_NAME
        //consumerProguardFiles "proguard-rules.pro"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        // 确保你设置 Kotlin 编译选项
        //用于解决-dontwarn java.lang.invoke.StringConcatFactory
        freeCompilerArgs = ['-Xstring-concat=inline']

    }
    buildTypes {
        debug {
            buildConfigField "String","TYPE","\"${ProjectBuildDencies.Variants.DEVELOP}\""
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
          //  proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String","TYPE","\"${ProjectBuildDencies.Variants.RELEASE}\""
            minifyEnabled true
            consumerProguardFiles 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        master {
            buildConfigField "String","TYPE","\"${ProjectBuildDencies.Variants.MASTER}\""
            minifyEnabled true
            consumerProguardFiles 'proguard-rules.pro'
         //   proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    testOptions {
        unitTests.returnDefaultValues = true
    }




}

kapt {
    arguments {
        arg("GOROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    testImplementation Dependencies.Android.JUNIT
    androidTestImplementation Dependencies.Androidx.TEST_EXT_JUNIT
    androidTestImplementation Dependencies.Androidx.TEST_ESPRESSO
}

